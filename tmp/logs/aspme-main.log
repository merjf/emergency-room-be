2023-01-31 15:32:12.334  INFO FGCTL012202 --- [           main] c.p.PortalepsApplication                 : Starting PortalepsApplication using Java 17.0.2 on FGCTL012202 with PID 25100 (C:\Users\francesco.mergiotti\Documents\Personal\Projects\portale-pronto-soccorso-be\target\classes started by francesco.mergiotti in C:\Users\francesco.mergiotti\Documents\Personal\Projects\portale-pronto-soccorso-be)
2023-01-31 15:32:12.344  INFO FGCTL012202 --- [           main] c.p.PortalepsApplication                 : No active profile set, falling back to default profiles: default
2023-01-31 15:32:13.949  INFO FGCTL012202 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-01-31 15:32:14.059  INFO FGCTL012202 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 94 ms. Found 3 JPA repository interfaces.
2023-01-31 15:32:14.416  INFO FGCTL012202 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@48976e6d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-01-31 15:32:14.421  INFO FGCTL012202 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-01-31 15:32:14.983  INFO FGCTL012202 --- [           main] o.s.b.w.e.t.TomcatWebServer              : Tomcat initialized with port(s): 8080 (http)
2023-01-31 15:32:14.995  INFO FGCTL012202 --- [           main] o.a.c.h.Http11NioProtocol                : Initializing ProtocolHandler ["http-nio-8080"]
2023-01-31 15:32:14.995  INFO FGCTL012202 --- [           main] o.a.c.c.StandardService                  : Starting service [Tomcat]
2023-01-31 15:32:14.996  INFO FGCTL012202 --- [           main] o.a.c.c.StandardEngine                   : Starting Servlet engine: [Apache Tomcat/9.0.52]
2023-01-31 15:32:15.130  INFO FGCTL012202 --- [           main] o.a.c.c.C.[.[.[/]                        : Initializing Spring embedded WebApplicationContext
2023-01-31 15:32:15.131  INFO FGCTL012202 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2724 ms
2023-01-31 15:32:15.424  INFO FGCTL012202 --- [           main] o.h.j.i.u.LogHelper                      : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-01-31 15:32:15.492  INFO FGCTL012202 --- [           main] o.h.Version                              : HHH000412: Hibernate ORM core version 5.4.32.Final
2023-01-31 15:32:15.664  INFO FGCTL012202 --- [           main] o.h.a.c.Version                          : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-01-31 15:32:15.789  INFO FGCTL012202 --- [           main] c.z.h.HikariDataSource                   : HikariPool-1 - Starting...
2023-01-31 15:32:15.794  WARN FGCTL012202 --- [           main] c.z.h.u.DriverDataSource                 : Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2023-01-31 15:32:16.217  INFO FGCTL012202 --- [           main] c.z.h.HikariDataSource                   : HikariPool-1 - Start completed.
2023-01-31 15:32:16.243  INFO FGCTL012202 --- [           main] o.h.d.Dialect                            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-01-31 15:32:17.266  INFO FGCTL012202 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-01-31 15:32:17.273  INFO FGCTL012202 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-01-31 15:32:17.770  WARN FGCTL012202 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-31 15:32:17.805  INFO FGCTL012202 --- [           main] c.p.s.WebSecurityConfig                  : authenticationManagerBean() - start
2023-01-31 15:32:17.805  INFO FGCTL012202 --- [           main] c.p.s.WebSecurityConfig                  : authenticationManagerBean() - end
2023-01-31 15:32:17.968  INFO FGCTL012202 --- [           main] c.p.s.WebSecurityConfig                  : configure(http) - start
2023-01-31 15:32:17.972  INFO FGCTL012202 --- [           main] c.p.s.JwtTokenFilterConfigurer           : JwtTokenFilterConfigurer() - start
2023-01-31 15:32:17.973  INFO FGCTL012202 --- [           main] c.p.s.JwtTokenFilterConfigurer           : JwtTokenFilterConfigurer() - end
2023-01-31 15:32:17.973  INFO FGCTL012202 --- [           main] c.p.s.WebSecurityConfig                  : configure(http) - end
2023-01-31 15:32:17.974  INFO FGCTL012202 --- [           main] c.p.s.WebSecurityConfig                  : configure(web) - start
2023-01-31 15:32:17.974  INFO FGCTL012202 --- [           main] c.p.s.WebSecurityConfig                  : configure(http) - end
2023-01-31 15:32:17.975  INFO FGCTL012202 --- [           main] o.s.s.w.DefaultSecurityFilterChain       : Will secure Ant [pattern='/v2/api-docs'] with []
2023-01-31 15:32:17.976  INFO FGCTL012202 --- [           main] o.s.s.w.DefaultSecurityFilterChain       : Will secure Ant [pattern='/swagger-resources/**'] with []
2023-01-31 15:32:17.976  INFO FGCTL012202 --- [           main] o.s.s.w.DefaultSecurityFilterChain       : Will secure Ant [pattern='/swagger-ui.html'] with []
2023-01-31 15:32:17.976  INFO FGCTL012202 --- [           main] o.s.s.w.DefaultSecurityFilterChain       : Will secure Ant [pattern='/configuration/**'] with []
2023-01-31 15:32:17.976  INFO FGCTL012202 --- [           main] o.s.s.w.DefaultSecurityFilterChain       : Will secure Ant [pattern='/webjars/**'] with []
2023-01-31 15:32:17.976  INFO FGCTL012202 --- [           main] o.s.s.w.DefaultSecurityFilterChain       : Will secure Ant [pattern='/auth/login'] with []
2023-01-31 15:32:17.976  INFO FGCTL012202 --- [           main] o.s.s.w.DefaultSecurityFilterChain       : Will secure Ant [pattern='/h2-console/**/**'] with []
2023-01-31 15:32:18.041  INFO FGCTL012202 --- [           main] c.p.s.WebSecurityConfig                  : addCorsMappings() - start
2023-01-31 15:32:18.043  INFO FGCTL012202 --- [           main] c.p.s.WebSecurityConfig                  : addCorsMappings() - end
2023-01-31 15:32:18.188  INFO FGCTL012202 --- [           main] c.p.s.JwtTokenFilterConfigurer           : configure() - start
2023-01-31 15:32:18.190  INFO FGCTL012202 --- [           main] c.p.s.JwtTokenFilterConfigurer           : configure() - end
2023-01-31 15:32:18.190  INFO FGCTL012202 --- [           main] o.s.s.w.DefaultSecurityFilterChain       : Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@75f446df, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d1f9ec3, org.springframework.security.web.header.HeaderWriterFilter@6b35b0f4, org.springframework.web.filter.CorsFilter@3751baf6, org.springframework.security.web.authentication.logout.LogoutFilter@45b2b0ed, com.portaleps.security.JwtTokenFilter@27e656e6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f11d889, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5354bfce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3cfab56d, org.springframework.security.web.session.SessionManagementFilter@5bbc033f, org.springframework.security.web.access.ExceptionTranslationFilter@240f712e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@438a65a7]
2023-01-31 15:32:18.511  INFO FGCTL012202 --- [           main] o.a.c.h.Http11NioProtocol                : Starting ProtocolHandler ["http-nio-8080"]
2023-01-31 15:32:18.539  INFO FGCTL012202 --- [           main] o.s.b.w.e.t.TomcatWebServer              : Tomcat started on port(s): 8080 (http) with context path ''
2023-01-31 15:32:18.550  INFO FGCTL012202 --- [           main] c.p.PortalepsApplication                 : Started PortalepsApplication in 6.675 seconds (JVM running for 7.513)
2023-01-31 15:32:19.351  INFO FGCTL012202 --- [           main] c.p.PortalepsApplication                 : initFolders() - start
2023-01-31 15:32:19.351  INFO FGCTL012202 --- [           main] c.p.PortalepsApplication                 : initFolders() - folders created
2023-01-31 15:32:19.352  INFO FGCTL012202 --- [           main] c.p.PortalepsApplication                 : initFolders() - end
2023-01-31 15:42:44.333  INFO FGCTL012202 --- [nio-8080-exec-1] o.a.c.c.C.[.[.[/]                        : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-31 15:42:44.333  INFO FGCTL012202 --- [nio-8080-exec-1] o.s.w.s.DispatcherServlet                : Initializing Servlet 'dispatcherServlet'
2023-01-31 15:42:44.334  INFO FGCTL012202 --- [nio-8080-exec-1] o.s.w.s.DispatcherServlet                : Completed initialization in 1 ms
2023-01-31 15:42:44.423  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.AuthController                     : login() - start
2023-01-31 15:42:44.434  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.AuthController                     : Richieta con body [{"username":"admin","password":"admin"}]
2023-01-31 15:42:44.434  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : login() - start
2023-01-31 15:42:44.712  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByUsername() - start
2023-01-31 15:42:44.714  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByUsername() - end
2023-01-31 15:42:45.035  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:42:45.054  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:42:45.054  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : login() - end
2023-01-31 15:42:45.059  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : getUserDTO() - start
2023-01-31 15:42:45.073  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : toDto() - start
2023-01-31 15:42:45.073  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : toDto() - end
2023-01-31 15:42:45.102  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:42:45.111  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:42:45.111  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.AuthController                     : login() - login success
2023-01-31 15:42:45.111  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.AuthController                     : login() - end
2023-01-31 15:42:45.437  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:42:45.438  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:42:45.438  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:42:45.446  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:42:45.446  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:42:45.446  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:42:45.449  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:42:45.449  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:42:45.449  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:42:45.449  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:42:45.451  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:42:45.451  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:42:45.460  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:42:45.464  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:42:45.467  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:42:45.468  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:42:45.469  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:42:45.469  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:42:45.469  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:42:45.472  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:42:45.472  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:42:45.472  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:42:45.472  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:42:45.476  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:42:45.476  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:42:45.478  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:44:37.516  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:44:37.517  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:44:37.518  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:44:37.519  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:44:37.520  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:44:37.520  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:44:37.528  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:44:37.528  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:44:37.528  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:44:37.528  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:44:37.530  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:44:37.531  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:44:37.532  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:44:37.548  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:44:37.549  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:44:37.550  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:44:37.552  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:44:37.552  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:44:37.552  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:44:37.555  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:44:37.555  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:44:37.555  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:44:37.555  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:44:37.558  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:44:37.558  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:44:37.560  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:46:05.348  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:46:05.349  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:46:05.349  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:46:05.350  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:46:05.350  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:46:05.350  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:46:05.354  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:46:05.354  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:46:05.354  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:46:05.354  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:46:05.356  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:46:05.357  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:46:05.358  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:46:05.371  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:46:05.372  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:46:05.373  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:46:05.374  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:46:05.374  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:46:05.374  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:46:05.378  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:46:05.378  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:46:05.378  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:46:05.378  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:46:05.382  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:46:05.382  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:46:05.383  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:46:32.215  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:46:32.216  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:46:32.217  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:46:32.218  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:46:32.218  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:46:32.218  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:46:32.222  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:46:32.223  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:46:32.223  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:46:32.223  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:46:32.226  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:46:32.227  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:46:32.228  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:46:32.235  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:46:32.236  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:46:32.239  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:46:32.241  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:46:32.242  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:46:32.242  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:46:32.245  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:46:32.245  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:46:32.245  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:46:32.245  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:46:32.248  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:46:32.248  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:46:32.249  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:47:33.147  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:47:33.147  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:47:33.148  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:47:33.149  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:47:33.149  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:47:33.149  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:47:33.151  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:47:33.151  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:47:33.151  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:47:33.151  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:47:33.161  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:47:33.161  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:47:33.163  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:47:33.181  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:47:33.182  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:47:33.182  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:47:33.183  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:47:33.183  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:47:33.183  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:47:33.186  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:47:33.186  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:47:33.186  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:47:33.186  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:47:33.192  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:47:33.192  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:47:33.194  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:48:04.436  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:48:04.437  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:48:04.437  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:48:04.438  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:48:04.438  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:48:04.438  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:48:04.443  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:48:04.443  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:48:04.443  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:48:04.443  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:48:04.446  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:48:04.446  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:48:04.448  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:48:04.450  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:48:04.451  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:48:04.452  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:48:04.453  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:48:04.453  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:48:04.453  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:48:04.457  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:48:04.457  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:48:04.457  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:48:04.457  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:48:04.463  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:48:04.463  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:48:04.466  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:48:13.647  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:48:13.648  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:48:13.648  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:48:13.649  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:48:13.649  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:48:13.649  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:48:13.652  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:48:13.652  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:48:13.652  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:48:13.652  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:48:13.654  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:48:13.654  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:48:13.655  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:48:13.660  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:48:13.661  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:48:13.662  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:48:13.663  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:48:13.663  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:48:13.663  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:48:13.666  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:48:13.667  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:48:13.667  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:48:13.667  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:48:13.670  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:48:13.670  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:48:13.671  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:48:33.476  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:48:33.477  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:48:33.477  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:48:33.478  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:48:33.478  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:48:33.478  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:48:33.479  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 15:48:33.479  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:48:33.479  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:48:33.481  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - start
2023-01-31 15:48:33.481  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:48:33.481  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:48:33.483  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:48:33.483  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:48:33.483  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:48:33.483  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:48:33.483  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:48:33.483  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:48:33.485  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 15:48:33.485  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:48:33.485  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:48:33.485  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : getUserList() - start
2023-01-31 15:48:33.485  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:48:33.486  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:48:33.496  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : toDto() - start
2023-01-31 15:48:33.496  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : toDto() - end
2023-01-31 15:48:33.497  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:48:33.499  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:48:33.499  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : getUserList() - end
2023-01-31 15:48:33.499  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 15:48:33.499  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - end
2023-01-31 15:48:33.509  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:49:14.597  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:49:14.598  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:49:14.598  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:49:14.599  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:49:14.599  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:49:14.599  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:49:14.604  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:49:14.605  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:49:14.605  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:49:14.605  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:49:14.611  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:49:14.611  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:49:14.612  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:49:14.650  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:49:14.650  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:49:14.651  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:49:14.651  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:49:14.651  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:49:14.651  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:49:14.652  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 15:49:14.652  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - start
2023-01-31 15:49:14.652  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:49:14.652  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:49:14.652  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:49:14.652  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:49:14.655  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 15:49:14.655  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:49:14.655  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:49:14.656  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:49:14.656  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:49:14.656  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:49:14.656  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : getUserList() - start
2023-01-31 15:49:14.656  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:49:14.656  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:49:14.656  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:49:14.658  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:49:14.658  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - start
2023-01-31 15:49:14.658  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - end
2023-01-31 15:49:14.659  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:49:14.659  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:49:14.660  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:49:14.661  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : getUserList() - end
2023-01-31 15:49:14.661  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 15:49:14.661  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - end
2023-01-31 15:49:14.662  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:51:49.689  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:51:49.690  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:51:49.691  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:51:49.694  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:51:49.694  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:51:49.694  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:51:49.700  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:51:49.700  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:51:49.700  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:51:49.700  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:51:49.710  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:51:49.710  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:51:49.719  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:51:49.749  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:51:49.749  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:51:49.750  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:51:49.750  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:51:49.750  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:51:49.751  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:51:49.751  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.UserController                     : getUserList() - start
2023-01-31 15:51:49.751  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:51:49.751  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 15:51:49.751  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:51:49.751  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:51:49.751  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:51:49.754  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 15:51:49.754  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:51:49.754  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:51:49.754  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:51:49.754  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:51:49.754  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:51:49.754  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : getUserList() - start
2023-01-31 15:51:49.754  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:51:49.754  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:51:49.754  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:51:49.756  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:51:49.757  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : toDto() - start
2023-01-31 15:51:49.757  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : toDto() - end
2023-01-31 15:51:49.757  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:51:49.757  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:51:49.758  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:51:49.758  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : getUserList() - end
2023-01-31 15:51:49.759  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 15:51:49.759  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.UserController                     : getUserList() - end
2023-01-31 15:51:49.760  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:51:55.885  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:51:55.886  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:51:55.886  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:51:55.887  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:51:55.887  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:51:55.887  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:51:55.890  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:51:55.891  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:51:55.891  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:51:55.891  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:51:55.896  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:51:55.896  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:51:55.897  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:51:55.910  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:51:55.910  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:51:55.911  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:51:55.911  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:51:55.912  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:51:55.912  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:51:55.915  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 15:51:55.915  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - start
2023-01-31 15:51:55.916  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:51:55.916  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:51:55.916  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:51:55.916  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:51:55.920  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:51:55.920  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 15:51:55.920  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:51:55.920  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:51:55.920  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:51:55.920  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:51:55.920  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:51:55.920  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : getUserList() - start
2023-01-31 15:51:55.920  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:51:55.920  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:51:55.922  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:51:55.922  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : toDto() - start
2023-01-31 15:51:55.923  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : toDto() - end
2023-01-31 15:51:55.925  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:51:55.925  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:51:55.927  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:51:55.927  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : getUserList() - end
2023-01-31 15:51:55.927  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 15:51:55.927  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - end
2023-01-31 15:51:55.942  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:55:55.452  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:55:55.454  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:55:55.454  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:55:55.455  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:55:55.455  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:55:55.455  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:55:55.459  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:55:55.459  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:55:55.459  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:55:55.459  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:55:55.465  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:55:55.465  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:55:55.466  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:55:55.498  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:55:55.499  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:55:55.499  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:55:55.499  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:55:55.499  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:55:55.499  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:55:55.500  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 15:55:55.500  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:55:55.500  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:55:55.500  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : getUserList() - start
2023-01-31 15:55:55.500  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:55:55.500  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:55:55.502  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 15:55:55.502  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:55:55.502  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:55:55.502  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:55:55.502  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:55:55.502  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:55:55.502  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : getUserList() - start
2023-01-31 15:55:55.502  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:55:55.502  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:55:55.502  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:55:55.504  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:55:55.504  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - start
2023-01-31 15:55:55.504  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - end
2023-01-31 15:55:55.504  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:55:55.505  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:55:55.505  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:55:55.506  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : getUserList() - end
2023-01-31 15:55:55.506  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 15:55:55.506  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : getUserList() - end
2023-01-31 15:55:55.507  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:56:32.758  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:56:32.759  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:56:32.759  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:56:32.760  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:56:32.760  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:56:32.760  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:56:32.766  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:56:32.766  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:56:32.766  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:56:32.766  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:56:32.769  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:56:32.769  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:56:32.770  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:56:32.818  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:56:32.818  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:56:32.818  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:56:32.818  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:56:32.819  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:56:32.819  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:56:32.819  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 15:56:32.819  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:56:32.819  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.UserController                     : getUserList() - start
2023-01-31 15:56:32.819  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:56:32.819  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:56:32.820  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:56:32.822  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 15:56:32.822  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:56:32.822  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:56:32.822  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:56:32.822  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:56:32.822  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:56:32.822  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : getUserList() - start
2023-01-31 15:56:32.823  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:56:32.823  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:56:32.823  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:56:32.825  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:56:32.826  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : toDto() - start
2023-01-31 15:56:32.826  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : toDto() - end
2023-01-31 15:56:32.827  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:56:32.827  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:56:32.831  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:56:32.831  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : getUserList() - end
2023-01-31 15:56:32.831  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 15:56:32.831  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.UserController                     : getUserList() - end
2023-01-31 15:56:32.833  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:57:00.446  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:57:00.447  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:57:00.447  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:57:00.448  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 15:57:00.448  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:57:00.448  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:57:00.451  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:57:00.451  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:57:00.451  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:57:00.451  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:57:00.453  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:57:00.453  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 15:57:00.454  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:57:00.466  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:57:00.466  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:57:00.466  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:57:00.466  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:57:00.467  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:57:00.467  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:57:00.467  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 15:57:00.467  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - start
2023-01-31 15:57:00.468  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:57:00.468  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:57:00.468  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:57:00.468  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:57:00.472  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 15:57:00.472  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 15:57:00.473  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:57:00.473  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:57:00.473  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:57:00.473  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:57:00.473  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : getUserList() - start
2023-01-31 15:57:00.473  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:57:00.473  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:57:00.473  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:57:00.477  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : toDto() - start
2023-01-31 15:57:00.477  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:57:00.477  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : toDto() - end
2023-01-31 15:57:00.478  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:57:00.478  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:57:00.479  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:57:00.479  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : getUserList() - end
2023-01-31 15:57:00.479  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 15:57:00.479  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - end
2023-01-31 15:57:00.480  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 15:57:11.454  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 15:57:11.455  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 15:57:11.455  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 15:57:11.455  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - start
2023-01-31 15:57:11.455  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 15:57:11.455  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 15:57:11.458  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 15:57:11.458  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 15:57:11.458  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 15:57:11.458  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : getUserList() - start
2023-01-31 15:57:11.461  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - start
2023-01-31 15:57:11.461  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - end
2023-01-31 15:57:11.462  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 15:57:11.462  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 15:57:11.463  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : getUserList() - end
2023-01-31 15:57:11.463  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 15:57:11.463  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - end
2023-01-31 15:57:11.463  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:04:45.566  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:04:45.567  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:04:45.568  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:04:45.569  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:04:45.569  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:04:45.569  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:04:45.572  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:04:45.572  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:04:45.572  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:04:45.572  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:04:45.574  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:04:45.574  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:04:45.576  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:04:54.601  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:04:54.603  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:04:54.604  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:04:54.604  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:04:54.604  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:04:54.604  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:04:54.605  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:04:54.605  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 16:04:54.605  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:04:54.605  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:04:54.605  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:04:54.605  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:04:54.608  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:04:54.608  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 16:04:54.608  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:04:54.608  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:04:54.608  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:04:54.608  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:04:54.608  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:04:54.608  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:04:54.608  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:04:54.609  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:04:54.610  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:04:54.611  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : toDto() - start
2023-01-31 16:04:54.611  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : toDto() - end
2023-01-31 16:04:54.611  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:04:54.612  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:04:54.612  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:04:54.612  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:04:54.612  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:04:54.612  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:04:54.614  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:04:56.182  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:04:56.183  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:04:56.184  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:04:56.186  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:04:56.186  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:04:56.186  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:04:56.191  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:04:56.191  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:04:56.191  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:04:56.191  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:04:56.193  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:04:56.193  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:04:56.195  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:04:58.597  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:04:58.597  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:04:58.597  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:04:58.597  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:04:58.598  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:04:58.598  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:04:58.599  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 16:04:58.599  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:04:58.599  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:04:58.599  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:04:58.599  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:04:58.599  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:04:58.605  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:04:58.605  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 16:04:58.605  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:04:58.605  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:04:58.605  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:04:58.605  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:04:58.605  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:04:58.605  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:04:58.605  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:04:58.605  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:04:58.608  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:04:58.608  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : toDto() - start
2023-01-31 16:04:58.608  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : toDto() - end
2023-01-31 16:04:58.608  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:04:58.609  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:04:58.609  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:04:58.609  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:04:58.609  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:04:58.609  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:04:58.611  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:06:37.779  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:06:37.780  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:06:37.780  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:06:37.781  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:06:37.781  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:06:37.781  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:06:37.786  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:06:37.786  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:06:37.786  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:06:37.786  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:06:37.791  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:06:37.791  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:06:37.793  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:13:16.215  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:13:16.215  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:13:16.217  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:13:16.217  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:13:16.217  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:13:16.217  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:13:16.218  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 16:13:16.218  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:13:16.218  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:13:16.218  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:13:16.218  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:13:16.218  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:13:16.222  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:13:16.222  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 16:13:16.222  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:13:16.222  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:13:16.222  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:13:16.222  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:13:16.222  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:13:16.222  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:13:16.222  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:13:16.222  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:13:16.225  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:13:16.225  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - start
2023-01-31 16:13:16.225  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - end
2023-01-31 16:13:16.226  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:13:16.227  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:13:16.227  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:13:16.227  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:13:16.227  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:13:16.227  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:13:16.229  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:13:17.954  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:13:17.955  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:13:17.957  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:13:17.958  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:13:17.958  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:13:17.958  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:13:17.961  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:13:17.961  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:13:17.961  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:13:17.961  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:13:17.965  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:13:17.965  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:13:17.966  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:14:03.991  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:14:03.991  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:14:03.992  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:14:03.992  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:14:03.992  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:03.992  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:03.995  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:14:03.995  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:14:03.995  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:03.995  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:04.020  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:14:04.020  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:14:04.024  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:14:05.829  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:14:05.830  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:14:05.830  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:14:05.836  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:14:05.836  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:05.836  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:05.840  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [1] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:14:05.841  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:14:05.841  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:05.841  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:05.847  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:14:05.847  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:14:05.852  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:14:05.855  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:14:05.856  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:14:05.856  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:14:05.856  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:14:05.856  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:14:05.857  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:14:05.857  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:14:05.858  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:14:05.858  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:14:05.858  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:14:05.863 ERROR FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - bad connection
2023-01-31 16:14:05.871 ERROR FGCTL012202 --- [nio-8080-exec-8] o.a.c.c.C.[.[.[.[dispatcherServlet]      : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.portaleps.exception.CustomException: Bad connection] with root cause
com.portaleps.exception.CustomException: Bad connection
	at com.portaleps.helper.DatabaseHelper.createConnection(DatabaseHelper.java:51)
	at com.portaleps.helper.DatabaseHelper.performQuery(DatabaseHelper.java:60)
	at com.portaleps.service.VerbaleService.getVerbaliLength(VerbaleService.java:58)
	at com.portaleps.controller.VerbaleController.getAll(VerbaleController.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.portaleps.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-31 16:14:07.898  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:14:07.898  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:14:07.900  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:14:07.900  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:14:07.900  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:14:07.900  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:14:07.901  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 16:14:07.901  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:14:07.901  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:07.901  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:07.901  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:07.901  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:07.904  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 16:14:07.904  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:14:07.904  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:14:07.904  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:14:07.904  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:14:07.905  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:14:07.905  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:14:07.905  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:07.905  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:07.905  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:14:07.908  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : toDto() - start
2023-01-31 16:14:07.908  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : toDto() - end
2023-01-31 16:14:07.908  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:14:07.910  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:14:07.911  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:14:07.911  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:14:07.911  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:14:07.911  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:14:07.911  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:14:07.912  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:14:29.993  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:14:29.994  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:14:29.995  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:14:29.995  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:14:29.995  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:29.995  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:29.999  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:14:29.999  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:14:29.999  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:29.999  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:30.009  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:14:30.009  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:14:30.011  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:14:30.089  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:14:30.089  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:14:30.089  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:14:30.089  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:14:30.090  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:14:30.090  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:14:30.090  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:14:30.090  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:30.090  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:30.091  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 16:14:30.091  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:30.091  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:30.093  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 16:14:30.093  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:14:30.093  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:14:30.093  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:14:30.093  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:14:30.093  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:14:30.093  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:14:30.093  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:14:30.093  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:14:30.093  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:14:30.095  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : toDto() - start
2023-01-31 16:14:30.095  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : toDto() - end
2023-01-31 16:14:30.095  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:14:30.100  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:14:30.101  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:14:30.102  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:14:30.102  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:14:30.102  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:14:30.102  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:14:30.105  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:16:56.124  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:16:56.125  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:16:56.125  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:16:56.126  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:16:56.127  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:16:56.127  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:16:56.132  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 16:16:56.132  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:16:56.132  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:16:56.132  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:16:56.136  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : toDto() - start
2023-01-31 16:16:56.136  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : toDto() - end
2023-01-31 16:16:56.137  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:16:56.143  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:16:56.143  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:16:56.143  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:16:56.143  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:16:56.145  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:16:57.236  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:16:57.237  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:16:57.238  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:16:57.238  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:16:57.239  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:16:57.239  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:16:57.241  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:16:57.242  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:16:57.242  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:16:57.242  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:16:57.249  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:16:57.249  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:16:57.250  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:17:00.752  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:17:00.753  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:17:00.753  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:17:00.753  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:17:00.753  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:00.753  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:00.756  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:17:00.757  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:17:00.757  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:00.757  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:00.762  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:17:00.762  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:17:00.763  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:17:00.822  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:17:00.823  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:17:00.825  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:17:00.826  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:17:00.826  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:00.826  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:00.830  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:17:00.830  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:17:00.830  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:00.830  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:00.838  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:17:00.838  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:17:00.839  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:17:04.719  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.AuthController                     : login() - start
2023-01-31 16:17:04.719  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.AuthController                     : Richieta con body [{"username":"admin","password":"admin"}]
2023-01-31 16:17:04.719  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : login() - start
2023-01-31 16:17:04.723  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByUsername() - start
2023-01-31 16:17:04.724  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByUsername() - end
2023-01-31 16:17:04.978  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:17:04.979  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:17:04.979  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : login() - end
2023-01-31 16:17:04.979  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : getUserDTO() - start
2023-01-31 16:17:04.981  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : toDto() - start
2023-01-31 16:17:04.982  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : toDto() - end
2023-01-31 16:17:04.985  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:17:04.992  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:17:04.992  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.AuthController                     : login() - login success
2023-01-31 16:17:04.992  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.AuthController                     : login() - end
2023-01-31 16:17:05.043  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:17:05.044  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:17:05.045  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:17:05.046  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:17:05.046  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:05.046  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:05.049  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:17:05.049  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:17:05.049  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:05.049  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:05.056  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:17:05.056  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:17:05.116  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:17:05.391  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:17:05.391  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:17:05.392  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:17:05.392  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:17:05.392  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:05.392  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:05.394  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:17:05.395  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:17:05.395  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:05.395  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:05.401  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:17:05.401  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:17:05.402  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:17:05.444  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:17:05.445  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:17:05.446  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:17:05.447  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:17:05.447  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:05.447  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:05.452  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:17:05.452  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:17:05.452  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:05.452  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:05.461  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:17:05.461  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:17:05.462  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:17:09.539  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:17:09.539  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:17:09.540  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:17:09.541  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:17:09.541  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:09.541  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:09.543  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [1] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:17:09.543  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:17:09.543  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:09.543  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:09.546  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:17:09.546  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:17:09.547  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:17:09.549  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:17:09.549  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:17:09.549  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:17:09.549  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:17:09.549  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:17:09.549  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:17:09.549  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:17:09.552  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:17:09.552  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:17:09.552  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:17:09.552 ERROR FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : createConnection() - bad connection
2023-01-31 16:17:09.554 ERROR FGCTL012202 --- [nio-8080-exec-7] o.a.c.c.C.[.[.[.[dispatcherServlet]      : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.portaleps.exception.CustomException: Bad connection] with root cause
com.portaleps.exception.CustomException: Bad connection
	at com.portaleps.helper.DatabaseHelper.createConnection(DatabaseHelper.java:51)
	at com.portaleps.helper.DatabaseHelper.performQuery(DatabaseHelper.java:60)
	at com.portaleps.service.VerbaleService.getVerbaliLength(VerbaleService.java:58)
	at com.portaleps.controller.VerbaleController.getAll(VerbaleController.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.portaleps.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-31 16:17:11.635  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:17:11.636  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:17:11.636  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:17:11.637  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:17:11.637  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:17:11.637  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:17:11.637  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:11.637  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:11.637  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:17:11.638  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 16:17:11.638  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:11.638  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:11.640  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 16:17:11.640  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:17:11.640  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:17:11.640  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:17:11.640  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:17:11.640  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:17:11.640  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:17:11.640  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:11.640  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:11.640  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:17:11.643  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - start
2023-01-31 16:17:11.643  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - end
2023-01-31 16:17:11.643  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:17:11.645  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:17:11.647  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:17:11.647  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:17:11.648  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:17:11.648  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:17:11.648  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:17:11.649  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:17:38.204  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:17:38.205  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:17:38.205  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:17:38.207  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.UserController                     : createNewUser() - start
2023-01-31 16:17:38.207  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:38.207  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:38.211  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.UserController                     : Richieta da utente [admin] con parametri: [{"name":"John","surname":"Doee","username":"john.doee","email":"john@doee.com","password":"Password1234","roles":"","archives":[{"id":1,"name":"The Royal London Hospital"},{"id":2,"name":"St Mary's Hospital"},{"id":3,"name":"Royal Free Hospital"},{"id":4,"name":"St Thomas' Hospital"}],"active":true}]
2023-01-31 16:17:38.211  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:17:38.211  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:17:38.215  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : createNewUser() - start
2023-01-31 16:17:38.215  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : checkIntegrityBody() - start
2023-01-31 16:17:38.215  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : checkIntegrityBody() - end
2023-01-31 16:17:38.217  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : storeUser() - start
2023-01-31 16:17:38.220 ERROR FGCTL012202 --- [nio-8080-exec-2] o.a.c.c.C.[.[.[.[dispatcherServlet]      : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: No enum constant com.portaleps.model.entity.Role.] with root cause
java.lang.IllegalArgumentException: No enum constant com.portaleps.model.entity.Role.
	at java.base/java.lang.Enum.valueOf(Enum.java:273)
	at com.portaleps.model.entity.Role.valueOf(Role.java:5)
	at com.portaleps.service.UserService.storeUser(UserService.java:172)
	at com.portaleps.service.UserService.createOrModifyUser(UserService.java:82)
	at com.portaleps.service.UserService$$FastClassBySpringCGLIB$$b3838f32.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.portaleps.service.UserService$$EnhancerBySpringCGLIB$$95ff81ec.createOrModifyUser(<generated>)
	at com.portaleps.controller.UserController.createOrModifyUser(UserController.java:38)
	at com.portaleps.controller.UserController$$FastClassBySpringCGLIB$$d9a4ea5a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.portaleps.controller.UserController$$EnhancerBySpringCGLIB$$65b8ba22.createOrModifyUser(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.portaleps.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-31 16:17:41.999  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:17:42.000  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:17:42.000  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:17:42.002  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : createNewUser() - start
2023-01-31 16:17:42.002  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:17:42.002  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:17:42.005  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : Richieta da utente [admin] con parametri: [{"name":"John","surname":"Doee","username":"john.doee","email":"john@doee.com","password":"Password1234","roles":"","archives":[{"id":1,"name":"The Royal London Hospital"},{"id":2,"name":"St Mary's Hospital"},{"id":3,"name":"Royal Free Hospital"},{"id":4,"name":"St Thomas' Hospital"}],"active":true}]
2023-01-31 16:17:42.005  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:17:42.005  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:17:42.006  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : createNewUser() - start
2023-01-31 16:17:42.006  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : checkIntegrityBody() - start
2023-01-31 16:17:42.006  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : checkIntegrityBody() - end
2023-01-31 16:17:42.008  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : storeUser() - start
2023-01-31 16:17:42.011 ERROR FGCTL012202 --- [io-8080-exec-10] o.a.c.c.C.[.[.[.[dispatcherServlet]      : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: No enum constant com.portaleps.model.entity.Role.] with root cause
java.lang.IllegalArgumentException: No enum constant com.portaleps.model.entity.Role.
	at java.base/java.lang.Enum.valueOf(Enum.java:273)
	at com.portaleps.model.entity.Role.valueOf(Role.java:5)
	at com.portaleps.service.UserService.storeUser(UserService.java:172)
	at com.portaleps.service.UserService.createOrModifyUser(UserService.java:82)
	at com.portaleps.service.UserService$$FastClassBySpringCGLIB$$b3838f32.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.portaleps.service.UserService$$EnhancerBySpringCGLIB$$95ff81ec.createOrModifyUser(<generated>)
	at com.portaleps.controller.UserController.createOrModifyUser(UserController.java:38)
	at com.portaleps.controller.UserController$$FastClassBySpringCGLIB$$d9a4ea5a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.portaleps.controller.UserController$$EnhancerBySpringCGLIB$$65b8ba22.createOrModifyUser(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.portaleps.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-31 16:19:02.894  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:02.895  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:02.895  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:02.898  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:19:02.898  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:02.898  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:02.902  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:19:02.902  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:02.902  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:02.902  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:02.914  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:02.914  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:19:02.915  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:03.010  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:03.010  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:03.011  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:03.011  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:03.011  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:03.011  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:03.012  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 16:19:03.012  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:03.012  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:03.012  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:19:03.012  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:03.012  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:03.014  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 16:19:03.014  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:19:03.014  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:19:03.014  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:19:03.014  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:19:03.014  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:19:03.014  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:19:03.014  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:03.014  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:03.014  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:03.017  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : toDto() - start
2023-01-31 16:19:03.017  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : toDto() - end
2023-01-31 16:19:03.017  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:03.019  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:03.020  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:03.021  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:03.022  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:19:03.022  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:19:03.022  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:19:03.025  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:05.249  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:05.249  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:05.250  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:05.251  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:19:05.251  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:05.251  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:05.257  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:19:05.258  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:05.258  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:05.258  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:05.264  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:05.265  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:19:05.266  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:10.176  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.AuthController                     : login() - start
2023-01-31 16:19:10.176  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.AuthController                     : Richieta con body [{"username":"admin","password":"admin"}]
2023-01-31 16:19:10.176  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : login() - start
2023-01-31 16:19:10.179  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByUsername() - start
2023-01-31 16:19:10.180  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByUsername() - end
2023-01-31 16:19:10.437  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:10.437  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:10.437  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : login() - end
2023-01-31 16:19:10.437  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : getUserDTO() - start
2023-01-31 16:19:10.440  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - start
2023-01-31 16:19:10.440  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - end
2023-01-31 16:19:10.440  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:10.445  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:10.445  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.AuthController                     : login() - login success
2023-01-31 16:19:10.445  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.AuthController                     : login() - end
2023-01-31 16:19:10.492  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:10.493  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:10.493  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:10.495  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:19:10.495  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:10.495  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:10.501  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:19:10.501  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:10.501  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:10.501  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:10.556  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:10.556  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:19:10.605  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:10.939  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:10.940  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:10.940  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:10.941  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:19:10.941  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:10.941  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:10.943  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:19:10.943  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:10.943  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:10.943  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:10.953  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:10.953  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:19:10.954  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:10.981  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:10.982  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:10.983  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:10.983  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:19:10.983  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:10.983  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:10.986  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:19:10.986  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:10.986  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:10.986  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:11.001  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:11.001  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:19:11.003  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:13.489  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:13.489  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:13.489  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:13.489  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:13.489  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:13.489  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:13.490  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 16:19:13.490  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:13.490  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:19:13.490  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:13.490  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:13.490  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:13.493  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 16:19:13.493  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:19:13.493  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:19:13.493  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:19:13.493  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:19:13.493  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:19:13.493  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:19:13.493  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:13.493  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:13.493  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:13.495  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : toDto() - start
2023-01-31 16:19:13.495  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : toDto() - end
2023-01-31 16:19:13.496  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:13.501  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:13.503  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:13.503  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:13.503  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:19:13.503  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:19:13.503  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:19:13.504  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:47.296  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:47.296  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:47.297  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:47.298  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.UserController                     : createNewUser() - start
2023-01-31 16:19:47.298  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:47.298  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:47.300  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.UserController                     : Richieta da utente [admin] con parametri: [{"name":"John","surname":"Doee","username":"john.doee","email":"john@doee.com","password":"Password1234","roles":"ROLE_ADMIN","archives":[{"id":1,"name":"The Royal London Hospital"},{"id":2,"name":"St Mary's Hospital"},{"id":3,"name":"Royal Free Hospital"},{"id":4,"name":"St Thomas' Hospital"}],"active":true}]
2023-01-31 16:19:47.300  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:19:47.300  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:19:47.301  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : createNewUser() - start
2023-01-31 16:19:47.301  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : checkIntegrityBody() - start
2023-01-31 16:19:47.301  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : checkIntegrityBody() - end
2023-01-31 16:19:47.302  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : storeUser() - start
2023-01-31 16:19:47.577  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : storeUser() - end
2023-01-31 16:19:47.578  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : toDto() - start
2023-01-31 16:19:47.578  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : toDto() - end
2023-01-31 16:19:47.578  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : storeAccessToArchives() - start
2023-01-31 16:19:47.578  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:47.589  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:47.593  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:47.597  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:47.630  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : storeAccessToArchives() - end
2023-01-31 16:19:47.630  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : createNewUser() - user createdcom.portaleps.dto.UserDTO@62d29f5e
2023-01-31 16:19:47.630  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : createNewUser() - end
2023-01-31 16:19:47.635  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.UserController                     : createNewUser() - user created
2023-01-31 16:19:47.636  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.UserController                     : createNewUser() - end
2023-01-31 16:19:47.639  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:47.749  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:47.750  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:47.750  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:47.751  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:19:47.751  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:47.751  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:47.757  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : Richieta da utente [admin]
2023-01-31 16:19:47.757  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:19:47.757  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:19:47.757  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:19:47.760  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : toDto() - start
2023-01-31 16:19:47.760  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : toDto() - end
2023-01-31 16:19:47.760  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:47.765  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:47.765  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : toDto() - start
2023-01-31 16:19:47.765  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : toDto() - end
2023-01-31 16:19:47.765  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:47.767  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:47.767  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:19:47.767  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:19:47.767  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:19:47.768  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:57.961  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.AuthController                     : login() - start
2023-01-31 16:19:57.961  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.AuthController                     : Richieta con body [{"username":"john.doee","password":"Password1234"}]
2023-01-31 16:19:57.961  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : login() - start
2023-01-31 16:19:57.964  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByUsername() - start
2023-01-31 16:19:57.965  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByUsername() - end
2023-01-31 16:19:58.216  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:58.217  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:58.217  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : login() - end
2023-01-31 16:19:58.217  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : getUserDTO() - start
2023-01-31 16:19:58.219  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : toDto() - start
2023-01-31 16:19:58.220  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : toDto() - end
2023-01-31 16:19:58.220  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:58.225  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:58.225  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.AuthController                     : login() - login success
2023-01-31 16:19:58.225  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.AuthController                     : login() - end
2023-01-31 16:19:58.265  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:58.266  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:58.266  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:58.267  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:19:58.267  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:58.267  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:58.269  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:19:58.269  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:58.269  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:58.270  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:58.276  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:58.276  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:19:58.277  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:58.580  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:58.581  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:58.581  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:58.581  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:19:58.581  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:58.581  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:58.583  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:19:58.583  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:58.583  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:58.583  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:58.588  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:58.588  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:19:58.589  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:19:58.676  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:19:58.677  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:19:58.678  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:19:58.679  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:19:58.679  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:58.679  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:58.683  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:19:58.683  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:19:58.683  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:19:58.683  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:19:58.693  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:19:58.693  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:19:58.694  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:20:12.488  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:20:12.488  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:20:12.489  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:20:12.497  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : changePassword() - start
2023-01-31 16:20:12.497  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:20:12.497  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:20:12.500  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : Richieta da utente [john.doee] con password: [Admin1234]
2023-01-31 16:20:12.500  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : userAllowedToChangePassword() - start
2023-01-31 16:20:12.500  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:20:12.500  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:20:12.502  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : userAllowedToChangePassword() - end
2023-01-31 16:20:12.502  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : updatePassword() - start
2023-01-31 16:20:12.502  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:20:12.502  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:20:12.781  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - start
2023-01-31 16:20:12.781  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - end
2023-01-31 16:20:12.781  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:20:12.787  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:20:12.787  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : updatePassword() - end
2023-01-31 16:20:12.794  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : changePassword() - password updated
2023-01-31 16:20:12.794  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : changePassword() - end
2023-01-31 16:20:12.796  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:20:15.044  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:20:15.045  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:20:15.046  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:20:15.047  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:20:15.047  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:20:15.047  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:20:15.050  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.VerbaleController                  : Richieta da utente [john.doee] per archivio: [1] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:20:15.050  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:20:15.050  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:20:15.050  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:20:15.052  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:20:15.052  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:20:15.053  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:20:15.055  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:20:15.056  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:20:15.056  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:20:15.056  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:20:15.056  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:20:15.056  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:20:15.056  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:20:15.057  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:20:15.057  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:20:15.057  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:20:15.058 ERROR FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : createConnection() - bad connection
2023-01-31 16:20:15.059 ERROR FGCTL012202 --- [nio-8080-exec-6] o.a.c.c.C.[.[.[.[dispatcherServlet]      : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.portaleps.exception.CustomException: Bad connection] with root cause
com.portaleps.exception.CustomException: Bad connection
	at com.portaleps.helper.DatabaseHelper.createConnection(DatabaseHelper.java:51)
	at com.portaleps.helper.DatabaseHelper.performQuery(DatabaseHelper.java:60)
	at com.portaleps.service.VerbaleService.getVerbaliLength(VerbaleService.java:58)
	at com.portaleps.controller.VerbaleController.getAll(VerbaleController.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.portaleps.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-31 16:20:16.229  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:20:16.230  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:20:16.230  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:20:16.231  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:20:16.231  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:20:16.231  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:20:16.236  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:20:16.236  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:20:16.236  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:20:16.236  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:20:16.241  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:20:16.241  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:20:16.241  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:20:59.085  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:20:59.085  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:20:59.086  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:20:59.087  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:20:59.087  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:20:59.087  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:20:59.090  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : Richieta da utente [john.doee]
2023-01-31 16:20:59.090  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:20:59.090  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:20:59.090  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:20:59.093  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : toDto() - start
2023-01-31 16:20:59.093  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : toDto() - end
2023-01-31 16:20:59.093  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:20:59.098  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:20:59.098  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : toDto() - start
2023-01-31 16:20:59.098  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : toDto() - end
2023-01-31 16:20:59.098  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:20:59.099  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:20:59.099  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:20:59.099  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:20:59.099  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:20:59.100  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:20:59.108  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:20:59.109  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:20:59.109  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:20:59.110  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getAllArchives() - start
2023-01-31 16:20:59.110  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:20:59.110  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:20:59.124  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:20:59.124  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:20:59.124  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:20:59.124  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:20:59.124  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:20:59.124  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:20:59.133  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:20:59.135  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:21:44.990  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:21:44.990  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:21:44.991  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:21:44.992  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.UserController                     : createNewUser() - start
2023-01-31 16:21:44.992  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:21:44.992  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:21:44.995  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.UserController                     : Richieta da utente [john.doee] con parametri: [{"name":"Cecilia","surname":"Gutierrez","username":"cecilia.gutierrez","email":"cecilia@gutierrez.com","password":"Password1234","roles":"ROLE_RESEARCHER","archives":[{"id":1,"name":"The Royal London Hospital"},{"id":3,"name":"Royal Free Hospital"}],"active":true}]
2023-01-31 16:21:44.996  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:21:44.996  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:21:44.996  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : createNewUser() - start
2023-01-31 16:21:44.996  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : checkIntegrityBody() - start
2023-01-31 16:21:44.996  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : checkIntegrityBody() - end
2023-01-31 16:21:44.997  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : storeUser() - start
2023-01-31 16:21:45.262  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : storeUser() - end
2023-01-31 16:21:45.262  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : toDto() - start
2023-01-31 16:21:45.262  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : toDto() - end
2023-01-31 16:21:45.263  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : storeAccessToArchives() - start
2023-01-31 16:21:45.263  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:21:45.269  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:21:45.276  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : storeAccessToArchives() - end
2023-01-31 16:21:45.276  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : createNewUser() - user createdcom.portaleps.dto.UserDTO@46bc4205
2023-01-31 16:21:45.276  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : createNewUser() - end
2023-01-31 16:21:45.283  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.UserController                     : createNewUser() - user created
2023-01-31 16:21:45.283  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.UserController                     : createNewUser() - end
2023-01-31 16:21:45.284  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:21:45.412  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:21:45.413  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:21:45.413  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:21:45.414  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:21:45.414  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:21:45.414  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:21:45.417  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : Richieta da utente [john.doee]
2023-01-31 16:21:45.417  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:21:45.417  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:21:45.417  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:21:45.422  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - start
2023-01-31 16:21:45.423  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - end
2023-01-31 16:21:45.423  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:21:45.431  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:21:45.431  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - start
2023-01-31 16:21:45.431  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - end
2023-01-31 16:21:45.431  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:21:45.432  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:21:45.432  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - start
2023-01-31 16:21:45.432  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : toDto() - end
2023-01-31 16:21:45.433  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:21:45.434  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:21:45.434  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:21:45.434  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:21:45.434  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:21:45.435  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:22:31.159  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:22:31.160  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:22:31.160  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:22:31.161  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.UserController                     : createNewUser() - start
2023-01-31 16:22:31.161  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:22:31.161  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:22:31.164  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.UserController                     : Richieta da utente [john.doee] con parametri: [{"name":"Frank","surname":"Lee Mi","username":"frank.lee.mi","email":"frank@lee.com","password":"Password1234","roles":"ROLE_RESEARCHER","archives":[{"id":1,"name":"The Royal London Hospital"},{"id":2,"name":"St Mary's Hospital"},{"id":4,"name":"St Thomas' Hospital"}],"active":true}]
2023-01-31 16:22:31.164  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:22:31.164  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:22:31.164  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : createNewUser() - start
2023-01-31 16:22:31.164  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : checkIntegrityBody() - start
2023-01-31 16:22:31.164  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : checkIntegrityBody() - end
2023-01-31 16:22:31.165  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : storeUser() - start
2023-01-31 16:22:31.436  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : storeUser() - end
2023-01-31 16:22:31.436  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : toDto() - start
2023-01-31 16:22:31.436  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : toDto() - end
2023-01-31 16:22:31.436  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : storeAccessToArchives() - start
2023-01-31 16:22:31.437  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:22:31.442  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:22:31.445  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:22:31.449  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : storeAccessToArchives() - end
2023-01-31 16:22:31.450  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : createNewUser() - user createdcom.portaleps.dto.UserDTO@3a85e9f7
2023-01-31 16:22:31.450  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.UserService                        : createNewUser() - end
2023-01-31 16:22:31.454  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.UserController                     : createNewUser() - user created
2023-01-31 16:22:31.454  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.UserController                     : createNewUser() - end
2023-01-31 16:22:31.455  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:22:31.573  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:22:31.574  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:22:31.574  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:22:31.575  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : getUserList() - start
2023-01-31 16:22:31.576  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:22:31.576  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:22:31.578  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : Richieta da utente [john.doee]
2023-01-31 16:22:31.578  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : isAdmin() - start
2023-01-31 16:22:31.578  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : isAdmin() - end
2023-01-31 16:22:31.578  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : getUserList() - start
2023-01-31 16:22:31.582  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - start
2023-01-31 16:22:31.583  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - end
2023-01-31 16:22:31.583  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:22:31.589  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:22:31.589  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - start
2023-01-31 16:22:31.589  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - end
2023-01-31 16:22:31.589  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:22:31.591  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:22:31.591  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - start
2023-01-31 16:22:31.591  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - end
2023-01-31 16:22:31.592  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:22:31.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:22:31.594  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - start
2023-01-31 16:22:31.594  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : toDto() - end
2023-01-31 16:22:31.594  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:22:31.596  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:22:31.596  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : getUserList() - end
2023-01-31 16:22:31.596  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : getUserList() - user list found
2023-01-31 16:22:31.596  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.UserController                     : getUserList() - end
2023-01-31 16:22:31.597  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:23:35.931  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:23:35.932  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:23:35.932  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:23:35.934  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:23:35.934  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:23:35.934  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:23:35.937  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.VerbaleController                  : Richieta da utente [john.doee] per archivio: [1] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:23:35.937  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:23:35.937  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:23:35.937  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:23:35.939  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:23:35.939  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:23:35.940  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:23:35.942  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:23:35.942  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:23:35.942  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:23:35.942  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:23:35.942  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:23:35.942  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:23:35.942  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:23:35.943  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:23:35.943  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:23:35.943  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:23:35.943 ERROR FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : createConnection() - bad connection
2023-01-31 16:23:35.944 ERROR FGCTL012202 --- [nio-8080-exec-6] o.a.c.c.C.[.[.[.[dispatcherServlet]      : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.portaleps.exception.CustomException: Bad connection] with root cause
com.portaleps.exception.CustomException: Bad connection
	at com.portaleps.helper.DatabaseHelper.createConnection(DatabaseHelper.java:51)
	at com.portaleps.helper.DatabaseHelper.performQuery(DatabaseHelper.java:60)
	at com.portaleps.service.VerbaleService.getVerbaliLength(VerbaleService.java:58)
	at com.portaleps.controller.VerbaleController.getAll(VerbaleController.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.portaleps.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-31 16:23:36.325  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:23:36.326  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:23:36.326  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:23:36.327  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:23:36.327  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:23:36.327  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:23:36.330  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:23:36.330  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:23:36.330  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:23:36.330  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:23:36.337  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:23:36.337  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:23:36.338  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:28:12.387  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:28:12.388  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:28:12.388  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:28:12.389  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:28:12.389  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:28:12.389  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:28:12.392  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:28:12.392  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:28:12.392  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:28:12.392  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:28:12.398  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:28:12.398  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:28:12.400  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:28:12.462  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:28:12.463  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:28:12.463  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:28:12.465  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:28:12.465  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:28:12.465  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:28:12.467  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:28:12.467  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:28:12.467  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:28:12.467  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:28:12.471  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:28:12.472  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:28:12.473  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:28:58.455  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:28:58.457  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:28:58.458  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:28:58.458  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:28:58.458  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:28:58.458  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:28:58.462  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:28:58.462  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:28:58.462  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:28:58.462  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:28:58.468  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:28:58.468  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:28:58.469  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:28:58.532  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:28:58.533  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:28:58.533  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:28:58.534  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:28:58.534  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:28:58.534  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:28:58.537  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:28:58.537  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:28:58.537  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:28:58.537  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:28:58.547  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:28:58.547  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:28:58.548  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:29:11.519  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:29:11.519  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:29:11.520  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:29:11.520  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:29:11.520  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:11.520  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:11.522  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:29:11.523  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:29:11.523  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:11.523  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:11.526  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:29:11.526  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:29:11.527  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:29:11.548  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:29:11.548  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:29:11.549  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:29:11.550  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:29:11.550  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:11.550  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:11.552  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:29:11.552  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:29:11.552  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:11.552  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:11.557  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:29:11.557  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:29:11.559  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:29:16.415  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:29:16.416  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:29:16.416  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:29:16.417  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:29:16.417  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:16.417  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:16.419  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:29:16.419  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:29:16.419  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:16.419  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:16.424  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:29:16.424  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:29:16.425  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:29:16.474  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:29:16.474  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:29:16.475  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:29:16.477  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:29:16.478  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:16.478  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:16.481  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:29:16.481  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:29:16.481  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:16.481  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:16.486  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:29:16.486  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:29:16.488  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:29:17.806  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:29:17.807  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:29:17.807  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:29:17.808  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:29:17.808  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:17.808  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:17.810  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:29:17.810  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:29:17.810  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:17.810  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:17.814  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:29:17.814  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:29:17.815  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:29:17.850  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:29:17.850  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:29:17.851  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:29:17.851  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:29:17.851  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:17.851  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:17.854  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:29:17.854  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:29:17.854  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:17.854  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:17.863  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:29:17.863  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:29:17.864  INFO FGCTL012202 --- [nio-8080-exec-5] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:29:50.493  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:29:50.493  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:29:50.494  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:29:50.494  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:29:50.494  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:50.494  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:50.496  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:29:50.496  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:29:50.496  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:50.496  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:50.500  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:29:50.500  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:29:50.502  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:29:50.566  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:29:50.567  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:29:50.567  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:29:50.568  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:29:50.568  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:50.568  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:50.571  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:29:50.571  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:29:50.571  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:29:50.571  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:29:50.575  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:29:50.575  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:29:50.577  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:30:34.512  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:30:34.513  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:30:34.513  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:30:34.514  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:30:34.514  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:30:34.514  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:30:34.517  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:30:34.517  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:30:34.518  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:30:34.518  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:30:34.525  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:30:34.525  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:30:34.526  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:30:34.538  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:30:34.539  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:30:34.539  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:30:34.541  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:30:34.541  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:30:34.541  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:30:34.543  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:30:34.543  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:30:34.543  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:30:34.543  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:30:34.550  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:30:34.550  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:30:34.551  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:36:44.025  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:36:44.026  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:36:44.027  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:36:44.029  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:36:44.029  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:36:44.029  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:36:44.032  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:36:44.032  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:36:44.032  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:36:44.032  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:36:44.036  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:36:44.036  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:36:44.038  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:36:44.092  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:36:44.093  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:36:44.094  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:36:44.094  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:36:44.094  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:36:44.095  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:36:44.097  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : Richieta da utente [john.doee]
2023-01-31 16:36:44.097  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:36:44.097  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:36:44.097  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:36:44.101  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:36:44.101  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:36:44.102  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:38:08.402  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.AuthController                     : login() - start
2023-01-31 16:38:08.402  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.AuthController                     : Richieta con body [{"username":"admin","password":"admin"}]
2023-01-31 16:38:08.402  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : login() - start
2023-01-31 16:38:08.404  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByUsername() - start
2023-01-31 16:38:08.405  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByUsername() - end
2023-01-31 16:38:08.665  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:38:08.665  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:38:08.665  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : login() - end
2023-01-31 16:38:08.665  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : getUserDTO() - start
2023-01-31 16:38:08.667  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : toDto() - start
2023-01-31 16:38:08.667  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : toDto() - end
2023-01-31 16:38:08.667  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:38:08.671  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:38:08.671  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.AuthController                     : login() - login success
2023-01-31 16:38:08.671  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.AuthController                     : login() - end
2023-01-31 16:38:08.703  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:38:08.704  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:38:08.704  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:38:08.705  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:38:08.705  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:08.705  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:08.709  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:38:08.709  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:38:08.709  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:08.709  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:08.715  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:38:08.715  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:38:08.716  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:38:09.379  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:38:09.379  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:38:09.379  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:38:09.380  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:38:09.380  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:09.380  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:09.382  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:38:09.382  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:38:09.382  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:09.382  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:09.385  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:38:09.385  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:38:09.386  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:38:09.453  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:38:09.453  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:38:09.454  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:38:09.454  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:38:09.455  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:09.455  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:09.457  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:38:09.457  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:38:09.457  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:09.457  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:09.463  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:38:09.463  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:38:09.464  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:38:12.266  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:38:12.266  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:38:12.267  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:38:12.268  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:38:12.268  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:12.268  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:12.270  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [1] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:38:12.270  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:38:12.270  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:12.270  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:12.273  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:38:12.273  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:38:12.276  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:38:12.277  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:38:12.277  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:38:12.278  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:38:12.278  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:38:12.278  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:38:12.278  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:38:12.278  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:38:12.278  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:38:12.278  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:38:12.278  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:38:12.279 ERROR FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : createConnection() - bad connection
2023-01-31 16:38:12.280 ERROR FGCTL012202 --- [nio-8080-exec-9] o.a.c.c.C.[.[.[.[dispatcherServlet]      : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.portaleps.exception.CustomException: Bad connection] with root cause
com.portaleps.exception.CustomException: Bad connection
	at com.portaleps.helper.DatabaseHelper.createConnection(DatabaseHelper.java:51)
	at com.portaleps.helper.DatabaseHelper.performQuery(DatabaseHelper.java:60)
	at com.portaleps.service.VerbaleService.getVerbaliLength(VerbaleService.java:58)
	at com.portaleps.controller.VerbaleController.getAll(VerbaleController.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.portaleps.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-31 16:38:49.305  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:38:49.305  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:38:49.305  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:38:49.306  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:38:49.306  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:49.306  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:49.309  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:38:49.309  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:38:49.309  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:49.309  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:49.314  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:38:49.314  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:38:49.315  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:38:51.398  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:38:51.399  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:38:51.399  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:38:51.402  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:38:51.402  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:51.402  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:51.405  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [1] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:38:51.405  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:38:51.405  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:38:51.405  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:38:51.409  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:38:51.409  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:38:51.411  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:38:51.414  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:38:51.414  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:38:51.414  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:38:51.414  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:38:51.414  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:38:51.414  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:38:51.414  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:38:51.415  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:38:51.415  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:38:51.415  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:38:51.425  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:38:51.456  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:38:51.457  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:38:51.457  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:38:51.457  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:38:51.457  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:38:51.457  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:38:51.457  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:38:51.457  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:38:51.457  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:38:51.457  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:38:51.458  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:38:51.458  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:38:51.459  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:38:51.459  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:38:51.459  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:38:51.460  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:38:51.460  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:38:51.470  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:38:51.472 ERROR FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - query not executed: SELECT vv.colore AS Colore, vv.id_accesso AS Accesso, vv.nome AS Nome, vv.cognome AS Cognome, vv.cod_fisc AS "Codice Fiscale", vv.problema_accesso AS "Problema Accesso", vv.data_accesso AS "Data Accesso", vv.ora_accesso AS "Ora Accesso", vv.data_dimissione AS "Data Dimissione", vv.ora_dimissione AS "Ora Dimissione", GROUP_CONCAT(vv.diagnosi SEPARATOR ' - ') as Diagnosi, vv.esito AS "Esito Trattamento"  FROM view_verbali vv  GROUP BY vv.id_accesso  LIMIT 25 OFFSET 0 ;
2023-01-31 16:38:51.473 ERROR FGCTL012202 --- [nio-8080-exec-8] o.a.c.c.C.[.[.[.[dispatcherServlet]      : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.portaleps.exception.CustomException: Bad query] with root cause
com.portaleps.exception.CustomException: Bad query
	at com.portaleps.helper.DatabaseHelper.performQuery(DatabaseHelper.java:75)
	at com.portaleps.service.VerbaleService.getVerbali(VerbaleService.java:48)
	at com.portaleps.controller.VerbaleController.getAll(VerbaleController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.portaleps.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-31 16:39:29.161  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:29.162  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:29.162  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:29.163  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:39:29.163  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:29.163  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:29.165  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:39:29.165  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:39:29.165  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:29.165  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:29.170  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:39:29.170  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:39:29.171  INFO FGCTL012202 --- [nio-8080-exec-2] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:29.590  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:29.591  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:29.591  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:29.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - start
2023-01-31 16:39:29.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:29.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:29.596  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : Richieta da utente [admin]
2023-01-31 16:39:29.596  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - start
2023-01-31 16:39:29.596  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:29.596  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:29.601  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.ArchiveService                     : getArchivesByUser() - end
2023-01-31 16:39:29.601  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.ArchiveController                  : getMyArchives() - end
2023-01-31 16:39:29.602  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:31.885  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:31.885  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:31.886  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:31.886  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:31.886  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:31.886  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:31.887  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:39:31.887  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:39:31.887  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:31.887  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:31.887  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:31.887  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:31.892  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [1] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:39:31.892  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [1] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:39:31.892  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:39:31.892  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:39:31.892  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:31.892  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:31.892  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:31.892  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:31.896  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:39:31.897  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:39:31.896  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:39:31.897  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:39:31.898  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:39:31.898  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:31.900  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:31.901  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:31.901  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:31.901  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:31.902  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:31.902  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:31.902  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:31.916  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:31.916  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:31.942  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:31.970  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:31.971  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:31.971  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:32.036  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:32.036  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:32.037  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : extractVerbaliList() - start
2023-01-31 16:39:32.037  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.VerbaleService                     : extractVerbaliList() - start
2023-01-31 16:39:32.037  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : extractVerbaliList() - end
2023-01-31 16:39:32.037  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.VerbaleService                     : extractVerbaliList() - end
2023-01-31 16:39:32.037  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:32.037  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:32.037  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : getVerbali() - end
2023-01-31 16:39:32.037  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.VerbaleController                  : getAll() - action performed
2023-01-31 16:39:32.037  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.VerbaleController                  : getAll() - end
2023-01-31 16:39:32.038  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:32.038  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:32.038  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.VerbaleService                     : getVerbali() - end
2023-01-31 16:39:32.038  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.VerbaleController                  : getAll() - action performed
2023-01-31 16:39:32.038  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.c.VerbaleController                  : getAll() - end
2023-01-31 16:39:32.043  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:32.043  INFO FGCTL012202 --- [nio-8080-exec-6] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:36.392  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:36.393  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:36.394  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:36.395  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:39:36.395  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:36.395  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:36.397  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [1] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:39:36.397  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:39:36.397  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:36.397  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:36.400  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:39:36.400  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:39:36.400  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:39:36.402  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:39:36.402  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:39:36.402  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:36.402  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:36.402  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:39:36.402  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:36.402  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:36.403  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:36.403  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:36.403  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:36.413  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:36.414  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:36.452  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:36.453  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.VerbaleService                     : extractVerbaliList() - start
2023-01-31 16:39:36.453  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.VerbaleService                     : extractVerbaliList() - end
2023-01-31 16:39:36.480  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:36.481  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:36.481  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.VerbaleService                     : getVerbali() - end
2023-01-31 16:39:36.481  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.VerbaleController                  : getAll() - action performed
2023-01-31 16:39:36.481  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.c.VerbaleController                  : getAll() - end
2023-01-31 16:39:36.482  INFO FGCTL012202 --- [nio-8080-exec-4] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:38.142  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:38.142  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:38.143  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:38.143  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:38.143  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:38.143  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:38.144  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:39:38.144  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:39:38.144  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:38.144  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:38.144  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:38.144  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:38.146  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [2] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:39:38.146  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [2] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:39:38.146  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:39:38.146  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:39:38.146  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:38.147  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:38.146  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:38.147  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:38.149  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:39:38.149  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:39:38.149  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:39:38.149  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:39:38.150  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:39:38.150  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:39:38.152  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:39:38.152  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:39:38.152  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:38.152  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:39:38.152  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:38.152  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:39:38.152  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:38.152  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:38.152  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:39:38.153  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:38.153  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:38.153  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:39:38.153  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:38.153  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:38.153  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:38.153  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:38.153  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:38.153  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:38.153  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:38.153  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:38.165  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:38.165  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:38.198  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:38.210  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:38.219  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:38.219  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : extractVerbaliList() - start
2023-01-31 16:39:38.219  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : extractVerbaliList() - end
2023-01-31 16:39:38.222  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:38.223  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : extractVerbaliList() - start
2023-01-31 16:39:38.223  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : extractVerbaliList() - end
2023-01-31 16:39:38.257  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:38.257  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:38.257  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbali() - end
2023-01-31 16:39:38.257  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : getAll() - action performed
2023-01-31 16:39:38.257  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : getAll() - end
2023-01-31 16:39:38.258  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:38.271  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:38.271  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:38.271  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : getVerbali() - end
2023-01-31 16:39:38.271  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.VerbaleController                  : getAll() - action performed
2023-01-31 16:39:38.271  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.VerbaleController                  : getAll() - end
2023-01-31 16:39:38.273  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:40.500  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:40.500  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:40.501  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:40.501  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:40.501  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:40.501  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:40.504  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:39:40.504  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:40.504  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:40.504  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:39:40.504  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:40.504  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:40.507  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [3] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:39:40.507  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [3] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:39:40.507  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:39:40.507  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:39:40.507  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:40.507  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:40.507  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:40.507  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:40.510  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:39:40.510  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:39:40.510  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:39:40.510  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:39:40.511  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:39:40.511  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:40.513  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:40.514  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:40.514  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:40.514  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:40.514  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:40.514  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:40.514  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:40.527  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:40.527  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:40.529  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:40.591  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:40.591  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:40.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.VerbaleService                     : extractVerbaliList() - start
2023-01-31 16:39:40.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.VerbaleService                     : extractVerbaliList() - end
2023-01-31 16:39:40.593  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : extractVerbaliList() - start
2023-01-31 16:39:40.593  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : extractVerbaliList() - end
2023-01-31 16:39:40.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:40.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:40.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.VerbaleService                     : getVerbali() - end
2023-01-31 16:39:40.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.VerbaleController                  : getAll() - action performed
2023-01-31 16:39:40.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.c.VerbaleController                  : getAll() - end
2023-01-31 16:39:40.593  INFO FGCTL012202 --- [io-8080-exec-10] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:40.612  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:40.612  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:40.612  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.VerbaleService                     : getVerbali() - end
2023-01-31 16:39:40.612  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.VerbaleController                  : getAll() - action performed
2023-01-31 16:39:40.612  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.c.VerbaleController                  : getAll() - end
2023-01-31 16:39:40.615  INFO FGCTL012202 --- [nio-8080-exec-3] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:41.769  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:41.769  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:41.770  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:41.770  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:41.770  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:41.771  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:41.772  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:39:41.772  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:41.772  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:41.772  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:39:41.772  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:41.772  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:41.775  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [4] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:39:41.775  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:39:41.775  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:41.775  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:41.775  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [4] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:39:41.775  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:39:41.775  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:41.775  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:41.777  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:39:41.777  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:39:41.777  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:39:41.777  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:39:41.779  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:39:41.779  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:41.781  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:41.782  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:41.782  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:41.782  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:41.782  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:41.782  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:41.782  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:41.794  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:41.794  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:41.795  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:41.858  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:41.858  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:41.858  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:41.859  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:41.868  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:41.868  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.VerbaleService                     : extractVerbaliList() - start
2023-01-31 16:39:41.869  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.VerbaleService                     : extractVerbaliList() - end
2023-01-31 16:39:41.870  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:41.870  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:41.870  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.VerbaleService                     : getVerbali() - end
2023-01-31 16:39:41.870  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.VerbaleController                  : getAll() - action performed
2023-01-31 16:39:41.870  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.c.VerbaleController                  : getAll() - end
2023-01-31 16:39:41.871  INFO FGCTL012202 --- [nio-8080-exec-9] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:41.873  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:41.874  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.VerbaleService                     : extractVerbaliList() - start
2023-01-31 16:39:41.874  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.VerbaleService                     : extractVerbaliList() - end
2023-01-31 16:39:41.930  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:41.930  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:41.930  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.VerbaleService                     : getVerbali() - end
2023-01-31 16:39:41.930  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.VerbaleController                  : getAll() - action performed
2023-01-31 16:39:41.930  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.c.VerbaleController                  : getAll() - end
2023-01-31 16:39:41.931  INFO FGCTL012202 --- [nio-8080-exec-7] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:42.760  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:42.760  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - start
2023-01-31 16:39:42.760  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:42.760  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - start
2023-01-31 16:39:42.761  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:42.761  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : loadUserByToken() - end
2023-01-31 16:39:42.761  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:39:42.761  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:42.761  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:42.762  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.VerbaleController                  : getAll() - start
2023-01-31 16:39:42.762  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:42.762  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:42.763  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [1] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:39:42.763  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : Richieta da utente [admin] per archivio: [1] con parametri: [{"filters":{},"pagination":[25,0]}]
2023-01-31 16:39:42.763  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:39:42.763  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : preliminaryChecks() - start
2023-01-31 16:39:42.763  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:42.763  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - start
2023-01-31 16:39:42.763  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:42.764  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.UserHelper                         : getCurrentUser() - end
2023-01-31 16:39:42.765  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:39:42.765  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:39:42.765  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : userHasAccessToArchive() - start
2023-01-31 16:39:42.765  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : userHasAccessToArchive() - end
2023-01-31 16:39:42.767  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:39:42.767  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.UserService                        : preliminaryChecks() - end
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbaliLength() - start
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildCountRows() - start
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : buildCountRows() - end
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:42.769  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:42.770  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:42.770  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:42.770  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:42.770  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:42.770  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:42.770  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:42.796  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:42.796  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:42.796  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : getVerbaliLength() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : populatePagination() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : populatePagination() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : getVerbali() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : buildSearchQuery() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendWhereCondition() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendWhereCondition() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendPagination() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : appendPagination() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.QueryBuilder                       : buildSearchQuery() - end
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : createConnection() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - start
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - class name found
2023-01-31 16:39:42.797  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : mapDriverClassName() - end
2023-01-31 16:39:42.871  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:42.871  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : createConnection() - connection created
2023-01-31 16:39:42.872  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : extractVerbaliList() - start
2023-01-31 16:39:42.872  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : extractVerbaliList() - start
2023-01-31 16:39:42.872  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : extractVerbaliList() - end
2023-01-31 16:39:42.872  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : extractVerbaliList() - end
2023-01-31 16:39:42.872  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:42.872  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:42.872  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.VerbaleService                     : getVerbali() - end
2023-01-31 16:39:42.873  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : getAll() - action performed
2023-01-31 16:39:42.873  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.c.VerbaleController                  : getAll() - end
2023-01-31 16:39:42.873  INFO FGCTL012202 --- [nio-8080-exec-8] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:39:42.924  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - connection closed
2023-01-31 16:39:42.925  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.h.DatabaseHelper                     : performQuery() - end
2023-01-31 16:39:42.925  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.VerbaleService                     : getVerbali() - end
2023-01-31 16:39:42.925  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.VerbaleController                  : getAll() - action performed
2023-01-31 16:39:42.925  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.c.VerbaleController                  : getAll() - end
2023-01-31 16:39:42.926  INFO FGCTL012202 --- [nio-8080-exec-1] c.p.s.JwtTokenFilter                     : doFilterInternal() - end
2023-01-31 16:40:51.314  INFO FGCTL012202 --- [ionShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-01-31 16:40:51.317  INFO FGCTL012202 --- [ionShutdownHook] c.z.h.HikariDataSource                   : HikariPool-1 - Shutdown initiated...
2023-01-31 16:40:51.583  INFO FGCTL012202 --- [ionShutdownHook] c.z.h.HikariDataSource                   : HikariPool-1 - Shutdown completed.
